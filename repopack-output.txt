================================================================
Repopack Output File
================================================================

This file was generated by Repopack on: 2024-11-12T16:17:22.444Z

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This header section
2. Repository structure
3. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
1. This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
2. When processing this file, use the separators and "File:" markers to
  distinguish between different files in the repository.
3. Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.



For more information about Repopack, visit: https://github.com/yamadashy/repopack

================================================================
Repository Structure
================================================================
[...not-found]/
  page.tsx
api/
  [...nextauth]/
    route.ts
auth/
  error/
    page.tsx
  login/
    layout.tsx
    page.tsx
  register/
    layout.tsx
    page.tsx
dashboard/
  components/
    customer.tsx
    data.ts
    product.tsx
    recent-order-table.tsx
    visitors-chart.tsx
    visitors-report.tsx
  strategies/
    strategy-builder/
      page.tsx
  layout.tsx
  page.tsx
error.tsx
globals.css
layout.tsx
not-found.tsx
page.tsx
theme.css

================================================================
Repository Files
================================================================

================
File: [...not-found]/page.tsx
================
import { notFound } from "next/navigation";

const page = () => {
    notFound();
};

export default page;

================
File: api/[...nextauth]/route.ts
================
// app/api/auth/[...nextauth]/route.ts
import { handlers } from '@/auth';

export const { GET, POST } = handlers;

================
File: auth/error/page.tsx
================
// app/auth/error/page.tsx
'use client';

import { useSearchParams } from 'next/navigation';
import Link from 'next/link';
import { Button } from '@/components/ui/button';

export default function AuthError() {
  const searchParams = useSearchParams();
  const error = searchParams.get('error');

  const getErrorMessage = (error: string) => {
    switch (error) {
      case 'Configuration':
        return 'There is a problem with the server configuration.';
      case 'AccessDenied':
        return 'You do not have permission to sign in.';
      case 'Verification':
        return 'The verification link was invalid or has expired.';
      default:
        return 'An error occurred during authentication.';
    }
  };

  return (
    <div className='flex min-h-screen flex-col items-center justify-center px-6'>
      <div className='text-center'>
        <h1 className='text-4xl font-bold text-destructive mb-4'>Authentication Error</h1>
        <p className='text-lg text-default-600 mb-8'>{getErrorMessage(error || '')}</p>
        <Button asChild>
          <Link href='/auth/login'>Try Again</Link>
        </Button>
      </div>
    </div>
  );
}

================
File: auth/login/layout.tsx
================
import { Metadata } from "next";

export const metadata: Metadata = {
  title: "Atomatic - Autonamous Algo Trading",
  description: "A no-code trading platform for everyone",
};
const Layout = ({ children }: { children: React.ReactNode }) => {
  return <>{children}</>;
};

export default Layout;

================
File: auth/login/page.tsx
================
import Link from 'next/link';
import LoginForm from '@/components/partials/auth/login-form';
import Image from 'next/image';
import Copyright from '@/components/partials/auth/copyright';
import Logo from '@/components/logo';

const Login = () => {
  return (
    <>
      <div className='flex w-full items-center overflow-hidden min-h-dvh h-dvh basis-full'>
        <div className='overflow-y-auto flex flex-wrap w-full h-dvh'>
          <div className='flex-1 relative'>
            <div className=' h-full flex flex-col bg-default-50'>
              <div className='max-w-[524px] md:px-[42px] md:py-[44px] p-7  mx-auto w-full text-2xl text-default-900  mb-3 h-full flex flex-col justify-center'>
                <div className='flex justify-center items-center text-center mb-6 lg:hidden'>
                  <Link href='/'>
                    <Logo />
                  </Link>
                </div>
                <div className='text-center 2xl:mb-10 mb-4'>
                  <h4 className='font-medium'>Sign in</h4>
                  <div className='text-default-500  text-base'>Sign in to your account to start using Atomatic</div>
                </div>
                <LoginForm />
                <div className='md:max-w-[345px] mt-6 mx-auto font-normal text-default-500 md:mt-12 uppercase text-sm'>
                  Donâ€™t have an account?{' '}
                  <Link href='/register' className='text-default-900  font-medium hover:underline'>
                    Sign up
                  </Link>
                </div>
              </div>
              <div className='text-xs font-normal text-default-500 z-[999] pb-10 text-center'>
                <Copyright />
              </div>
            </div>
          </div>
          <div
            className='lg:block hidden flex-1 overflow-hidden text-[40px] leading-[48px] text-default-600 
 bg-cover bg-no-repeat bg-center'
            style={{
              backgroundImage: `url(/images/all-img/login-bg.png)`,
            }}
          >
            <div className='flex flex-col h-full justify-center'>
              <div className='flex-1 flex flex-col justify-center items-center'>
                <Link href='/'>
                  <Image src='/images/logo/atomatic_logo_white.png' alt='' width={120} height={120} className='mb-10  w-36' />
                </Link>
              </div>
              <div>
                <div
                  className='text-[40px] leading-[48px] text-white

 max-w-[525px] mx-auto pb-20 text-center'
                >
                  Unlock your Project <span className='text-white font-bold ms-1'>performance</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
};

export default Login;

================
File: auth/register/layout.tsx
================
import { Metadata } from "next";

export const metadata: Metadata = {
  title: "Atomatic - Autonamous Algo Trading",
  description: "A no-code trading platform for everyone",
};
const Layout = ({ children }: { children: React.ReactNode }) => {
  return <>{children}</>;
};

export default Layout;

================
File: auth/register/page.tsx
================
import Link from 'next/link';
import RegForm from "@/components/partials/auth/reg-form";
import Social from "@/components/partials/auth/social";
import Image from "next/image";
import Logo from "@/components/logo";

// image import

const Register = () => {
  return (
    <>
      <div className="flex w-full items-center overflow-hidden min-h-dvh h-dvh basis-full">
        <div className="overflow-y-auto flex flex-wrap w-full h-dvh">
          <div className="flex-1 relative">
            <div className=" h-full flex flex-col bg-default-50">
              <div className="max-w-[524px] md:px-[42px] md:py-[44px] p-7  mx-auto w-full text-2xl text-default-900  mb-3 h-full flex flex-col justify-center">
                <div className="flex justify-center items-center text-center mb-6 lg:hidden ">
                  <Link href="/">
                    <Logo />
                  </Link>
                </div>
                <div className="text-center 2xl:mb-10 mb-5">
                  <h4 className="font-medium">Sign up</h4>
                  <div className="text-default-500  text-base">
                    Create an account to start using Atomatic
                  </div>
                </div>
                <RegForm />
                <div className=" relative border-b-[#9AA2AF] border-opacity-[16%] border-b pt-6">
                  <div className=" absolute inline-block  bg-default-50 dark:bg-default-100 left-1/2 top-1/2 transform -translate-x-1/2 px-4 min-w-max text-sm  text-default-500  font-normal ">
                    Or continue with
                  </div>
                </div>
                <div className="max-w-[242px] mx-auto mt-8 w-full">
                  <Social locale="" />
                </div>
                <div className="max-w-[225px] mx-auto font-normal text-default-500  2xl:mt-12 mt-6 uppercase text-sm">
                  Already registered?
                  <Link
                    href="/login"
                    className="text-default-900  font-medium hover:underline"
                  >
                    Sign In
                  </Link>
                </div>
              </div>
              <div className="text-xs font-normal text-default-500 z-[999] pb-10 text-center">
                Copyright 2024, Atomatic All Rights Reserved.
              </div>
            </div>
          </div>
          <div
            className="lg:block hidden flex-1 overflow-hidden text-[40px] leading-[48px] text-default-600 
 bg-cover bg-no-repeat bg-center"
            style={{
              backgroundImage: `url(/images/all-img/login-bg.png)`,
            }}
          >
            <div className="flex flex-col h-full justify-center">
              <div className="flex-1 flex flex-col justify-center items-center">
                <Link href="/login">
                  <Image
                    width={300}
                    height={300}
                    src="/images/logo/logo-white.svg"
                    alt=""
                    className="mb-10 w-36"
                  />
                </Link>
              </div>
              <div>
                <div
                  className="text-[40px] leading-[48px] text-white

 max-w-[525px] mx-auto pb-20 text-center"
                >
                  Unlock your Project{" "}
                  <span className="text-white font-bold ms-1">performance</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
};

export default Register;

================
File: dashboard/components/customer.tsx
================
/* eslint-disable @typescript-eslint/no-explicit-any */
'use client';
import { Progress } from '@/components/ui/progress';
import Image from 'next/image';
const customers = [
  {
    title: 'Nicole Kidman',
    img: '/images/all-img/cus-1.png',
    value: 70,
    bg: 'before:bg-info/30',
    barColor: 'info',
    number: 2,
  },
  {
    title: 'Monica Bellucci',
    img: '/images/all-img/cus-2.png',
    value: 80,
    bg: 'before:bg-warning/30',
    barColor: 'warning',
    active: true,
    number: 1,
  },
  {
    title: 'Pamela Anderson',
    img: '/images/all-img/cus-3.png',
    value: 65,
    bg: 'before:bg-success/30',
    barColor: 'success',
    number: 3,
  },
  {
    title: 'Dianne Russell',
    img: '/images/users/user-1.jpg',
    value: 60,
    bg: 'before:bg-info/30',
    barColor: 'info',
    number: 4,
  },
  {
    title: 'Robert De Niro',
    img: '/images/users/user-2.jpg',
    value: 50,
    bg: 'before:bg-warning/30',
    barColor: 'warning',
    number: 5,
  },
  {
    title: 'De Niro',
    img: '/images/users/user-3.jpg',
    value: 60,
    bg: 'before:bg-warning/30',
    barColor: 'warning',
    number: 6,
  },
];

const CustomerList = ({ item }: any) => {
  return (
    <div className='relative  p-4 rounded md:flex items-center  md:space-x-10 md:space-y-0 space-y-3 rtl:space-x-reverse'>
      <div className={`${item.active ? 'ring-2 ring-[#FFC155]' : ''} h-10 w-10 rounded-full relative`}>
        {item.active && (
          <span className='crown absolute -top-[14px] left-1/2 -translate-x-1/2'>
            <Image width={40} height={40} className='w-7 h-7' src='/images/icon/crown.svg' alt='' />
          </span>
        )}
        <Image src={item.img} alt='' width={100} height={100} className='w-full h-full rounded-full' priority />
        <span className='h-4 w-4 absolute right-0 bottom-0 rounded-full bg-[#FFC155] border border-white flex flex-col items-center justify-center text-white text-[10px] font-medium'>
          {item.number}
        </span>
      </div>
      <h4 className='text-sm text-default-600 font-semibold'>{item.title}</h4>
      <div className='inline-block text-center bg-default-900 text-default-100 px-2.5 py-1.5 text-xs font-medium rounded-full min-w-[60px]'>
        {item.value}
      </div>
      <div className='flex-1'>
        <div className='flex justify-between text-sm font-normal  mb-3'>
          <span>{('progress')}</span>
          <span className='font-normal'>{item.value}%</span>
        </div>
        <Progress value={item.value} color={item.barColor} size='sm' />
      </div>
    </div>
  );
};
const CustomerCard = ({ item }: any) => {
  return (
    <div
      className={` relative z-[1] text-center p-4 rounded before:w-full before:h-[calc(100%-60px)] before:absolute before:left-0 before:top-[60px] before:rounded before:z-[-1] before:bg-opacity-[0.1] ${item.bg}`}
    >
      <div className={`${item.active ? 'ring-2 ring-[#FFC155]' : ''} h-[70px] w-[70px] rounded-full mx-auto mb-4 relative`}>
        {item.active && (
          <span className='crown absolute -top-[24px] left-1/2 -translate-x-1/2'>
            <Image width={40} height={40} className='w-7 h-7' src='/images/icon/crown.svg' alt='' />
          </span>
        )}
        <Image src={item.img} alt='' width={100} height={100} className='w-full h-full rounded-full' priority />
        <span className='h-[27px] w-[27px] absolute right-0 bottom-0 rounded-full bg-[#FFC155] border border-white flex flex-col items-center justify-center text-white text-xs font-medium'>
          {item.number}
        </span>
      </div>
      <h4 className='text-sm text-default-600 font-semibold mb-4'>{item.title}</h4>
      <div className='inline-block bg-default-900 text-default-100 px-2.5 py-1.5 text-xs font-medium rounded-full min-w-[60px]'>
        {item.value}
      </div>
      <div>
        <div className='flex justify-between text-sm font-normal  mb-3 mt-4'>
          <span>{'progress'}</span>
          <span className='font-normal'>{item.value}%</span>
        </div>
        <Progress value={item.value} color={item.barColor} size='sm' />
      </div>
    </div>
  );
};

const Customer = () => {
  return (
    <div className='pb-2'>
      <div className='grid md:grid-cols-3 grid-cols-1 gap-5'>
        {customers.slice(0, 3).map((item, i) => (
          <CustomerCard item={item} key={`customer-${i}`} />
        ))}
      </div>
      <div className='grid grid-cols-1 gap-5 mt-5'>
        {customers.slice(3, 8).map((item, i) => (
          <CustomerList item={item} key={`customer-item-${i}`} />
        ))}
      </div>
    </div>
  );
};

export default Customer;

================
File: dashboard/components/data.ts
================
import { OrdersDataProps } from "./recent-order-table";

export const data:OrdersDataProps[] = [
  {
    user: {
      name: "Esther Howard",
      image: "/images/users/user-1.jpg",
    },
    product: "Headphone",
    invoice: "#324567",
    price: "$90.99",
    status: "paid",
  },
  {
    user: {
      name: "Guy Hawkins",
      image: "/images/users/user-2.jpg",
    },
    product: "Headphone",
    invoice: "#4224",
    price: "$78.65",
    status: "due",
  },
  {
    user: {
      name: "Bessie Cooper",
      image: "/images/users/user-3.jpg",
    },
    product: "Headphone",
    invoice: "#4224",
    price: "$78.65",
    status: "pending",
  },
  {
    user: {
      name: "Kathryn Murphy",
      image: "/images/users/user-4.jpg",
    },
    product: "Headphone",
    invoice: "#4224",
    price: "$38.65",
    status: "cancled",
  },
  {
    user: {
      name: "Darrell Steward",
      image: "/images/users/user-5.jpg",
    },
    product: "Headphone",
    invoice: "#4224",
    price: "$178.65",
    status: "shipped",
  },
  {
    user: {
      name: "Darrell Steward",
      image: "/images/users/user-6.jpg",
    },
    product: "Headphone",
    invoice: "#4224",
    price: "$74.65",
    status: "cancled",
  },
  {
    user: {
      name: "Esther Howard",
      image: "/images/users/user-1.jpg",
    },
    product: "Headphone",
    invoice: "#324567",
    price: "$90.99",
    status: "paid",
  },
  {
    user: {
      name: "Guy Hawkins",
      image: "/images/users/user-2.jpg",
    },
    product: "Headphone",
    invoice: "#4224",
    price: "$78.65",
    status: "due",
  },
  {
    user: {
      name: "Bessie Cooper",
      image: "/images/users/user-3.jpg",
    },
    product: "Headphone",
    invoice: "#4224",
    price: "$78.65",
    status: "pending",
  },
  {
    user: {
      name: "Kathryn Murphy",
      image: "/images/users/user-4.jpg",
    },
    product: "Headphone",
    invoice: "#4224",
    price: "$38.65",
    status: "cancled",
  },
  {
    user: {
      name: "Darrell Steward",
      image: "/images/users/user-5.jpg",
    },
    product: "Headphone",
    invoice: "#4224",
    price: "$178.65",
    status: "shipped",
  },
  {
    user: {
      name: "Darrell Steward",
      image: "/images/users/user-6.jpg",
    },
    product: "Headphone",
    invoice: "#4224",
    price: "$74.65",
    status: "cancled",
  },
  {
    user: {
      name: "Esther Howard",
      image: "/images/users/user-1.jpg",
    },
    product: "Headphone",
    invoice: "#324567",
    price: "$90.99",
    status: "paid",
  },
  {
    user: {
      name: "Guy Hawkins",
      image: "/images/users/user-2.jpg",
    },
    product: "Headphone",
    invoice: "#4224",
    price: "$78.65",
    status: "due",
  },
  {
    user: {
      name: "Bessie Cooper",
      image: "/images/users/user-3.jpg",
    },
    product: "Headphone",
    invoice: "#4224",
    price: "$78.65",
    status: "pending",
  },
  {
    user: {
      name: "Kathryn Murphy",
      image: "/images/users/user-4.jpg",
    },
    product: "Headphone",
    invoice: "#4224",
    price: "$38.65",
    status: "cancled",
  },
  {
    user: {
      name: "Darrell Steward",
      image: "/images/users/user-5.jpg",
    },
    product: "Headphone",
    invoice: "#4224",
    price: "$178.65",
    status: "shipped",
  },
  {
    user: {
      name: "Darrell Steward",
      image: "/images/users/user-6.jpg",
    },
    product: "Headphone",
    invoice: "#4224",
    price: "$74.65",
    status: "cancled",
  },
  {
    user: {
      name: "Esther Howard",
      image: "/images/users/user-1.jpg",
    },
    product: "Headphone",
    invoice: "#324567",
    price: "$90.99",
    status: "paid",
  },
  {
    user: {
      name: "Guy Hawkins",
      image: "/images/users/user-2.jpg",
    },
    product: "Headphone",
    invoice: "#4224",
    price: "$78.65",
    status: "due",
  },
  {
    user: {
      name: "Bessie Cooper",
      image: "/images/users/user-3.jpg",
    },
    product: "Headphone",
    invoice: "#4224",
    price: "$78.65",
    status: "pending",
  },
  {
    user: {
      name: "Kathryn Murphy",
      image: "/images/users/user-4.jpg",
    },
    product: "Headphone",
    invoice: "#4224",
    price: "$38.65",
    status: "cancled",
  },
  {
    user: {
      name: "Darrell Steward",
      image: "/images/users/user-5.jpg",
    },
    product: "Headphone",
    invoice: "#4224",
    price: "$178.65",
    status: "shipped",
  },
  {
    user: {
      name: "Darrell Steward",
      image: "/images/users/user-6.jpg",
    },
    product: "Headphone",
    invoice: "#4224",
    price: "$74.65",
    status: "cancled",
  },
];


export const products = [
  {
    img: "/images/all-img/p-1.png",
    price: "$150.00",
    title: "Car engine oil",
    href:"#"
  },
  {
    img: "/images/all-img/p-2.png",
    price: "$150.00",
    title: "Car engine oil",
        href:"#"
  },
  {
    img: "/images/all-img/p-3.png",
    price: "$150.00",
    title: "Car engine oil",
        href:"#"
  },
  {
    img: "/images/all-img/p-4.png",
    price: "$150.00",
    title: "Car engine oil",
        href:"#"
  },
  {
    img: "/images/all-img/p-5.png",
    price: "$150.00",
    title: "Car engine oil",
        href:"#"
  },
  {
    img: "/images/all-img/p-6.png",
    price: "$150.00",
    title: "Car engine oil",
        href:"#"
  },
];

================
File: dashboard/components/product.tsx
================
import { Button } from '@/components/ui/button';
import Image from 'next/image';
import Link from 'next/link';

interface Product {
  img: string;
  price: string;
  title: string;
  href: string;
}
const Product = ({ product }: { product: Product }) => {
  const { img, href, price, title } = product;
  return (
    <div className='bg-default-50  p-4 rounded text-center'>
      <div className='h-12 w-12 rounded-full mb-4 mx-auto'>
        <Image src={img} alt='' height={100} width={100} className='w-full h-full rounded-full' />
      </div>
      <div className='text-default-500 text-sm mb-1  font-normal'> {price} </div>
      <div className='text-default-600  text-sm mb-4'>{title}</div>
      <Button asChild color='secondary' size='md' fullWidth>
        <Link href={href}>Best Selling Products</Link>
      </Button>
    </div>
  );
};

export default Product;

================
File: dashboard/components/recent-order-table.tsx
================
'use client';

import * as React from 'react';
import {
  ColumnDef,
  ColumnFiltersState,
  PaginationState,
  SortingState,
  VisibilityState,
  flexRender,
  getCoreRowModel,
  getFilteredRowModel,
  getPaginationRowModel,
  getSortedRowModel,
  useReactTable,
} from '@tanstack/react-table';
import { Button } from '@/components/ui/button';
import { data } from './data';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { ChevronLeft, ChevronRight } from 'lucide-react';
import { Badge } from '@/components/ui/badge';
import { cn } from '@/lib/utils';

export type OrdersDataProps = {
  user: {
    name: string;
    image: string;
  };
  product: string;
  invoice: string;
  price: string;
  status: 'paid' | 'due' | 'pending' | 'cancled' | 'shipped';
};

export const columns: ColumnDef<OrdersDataProps>[] = [
  {
    accessorKey: 'user',
    header: 'User',
    cell: ({ row }) => (
      <div className='flex items-center gap-5'>
        <div className='flex-none'>
          <div className='w-8 h-8'>
            <Avatar>
              <AvatarImage src={row.original.user.image}></AvatarImage>
              <AvatarFallback>SC</AvatarFallback>
            </Avatar>
          </div>
        </div>
        <div className='flex-1 text-start'>{row.original.user.name}</div>
      </div>
    ),
  },
  {
    accessorKey: 'invoice',
    header: 'Invoice',
    cell: ({ row }) => <span>{row.getValue('invoice')}</span>,
  },
  {
    accessorKey: 'price',
    header: 'Price',
    cell: ({ row }) => <span>{row.getValue('price')}</span>,
  },
  {
    accessorKey: 'status',
    header: 'Status',
    cell: ({ row }) => {
      const status = row.getValue('status') as string;
      const statusClass: { [key: string]: string } = {
        paid: 'bg-success/10 text-success',
        due: 'bg-warning/10 text-warning',
        pending: 'bg-primary/10 text-primary',
        cancled: 'bg-destructive/10 text-destructive',
        shipped: 'bg-warning/10 text-warning',
      };
      const className = statusClass[status] || 'bg-default/10 text-default';
      return <Badge className={cn('px-3 min-w-[90px] justify-center py-1 rounded-full', className)}>{status}</Badge>;
    },
  },
];

const RecentOrderTable = () => {
  const [sorting, setSorting] = React.useState<SortingState>([]);
  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>([]);
  const [columnVisibility, setColumnVisibility] = React.useState<VisibilityState>({});
  const [rowSelection, setRowSelection] = React.useState({});
  const [pagination, setPagination] = React.useState<PaginationState>({
    pageIndex: 0,
    pageSize: 6,
  });

  const table = useReactTable({
    data,
    columns,
    onSortingChange: setSorting,
    onColumnFiltersChange: setColumnFilters,
    getCoreRowModel: getCoreRowModel(),
    getPaginationRowModel: getPaginationRowModel(),
    getSortedRowModel: getSortedRowModel(),
    getFilteredRowModel: getFilteredRowModel(),
    onColumnVisibilityChange: setColumnVisibility,
    onRowSelectionChange: setRowSelection,
    onPaginationChange: setPagination,
    state: {
      sorting,
      columnFilters,
      columnVisibility,
      rowSelection,
      pagination,
    },
  });

  return (
    <div className='w-full overflow-x-auto'>
      <Table className='overflow-hidden'>
        <TableHeader>
          {table.getHeaderGroups().map((headerGroup) => (
            <TableRow key={headerGroup.id} className='bg-default-200'>
              {headerGroup.headers.map((header) => (
                <TableHead key={header.id}>
                  {header.isPlaceholder ? null : flexRender(header.column.columnDef.header, header.getContext())}
                </TableHead>
              ))}
            </TableRow>
          ))}
        </TableHeader>
        <TableBody>
          {table.getRowModel().rows?.length ? (
            table.getRowModel().rows.map((row) => (
              <TableRow key={row.id} data-state={row.getIsSelected() && 'selected'} className='h-[75px]'>
                {row.getVisibleCells().map((cell) => (
                  <TableCell key={cell.id}>{flexRender(cell.column.columnDef.cell, cell.getContext())}</TableCell>
                ))}
              </TableRow>
            ))
          ) : (
            <TableRow>
              <TableCell colSpan={columns.length} className='h-24 text-center'>
                No results.
              </TableCell>
            </TableRow>
          )}
        </TableBody>
      </Table>

      <div className='flex items-center justify-center gap-2 flex-none py-4'>
        <Button
          variant='outline'
          size='icon'
          onClick={() => table.previousPage()}
          disabled={!table.getCanPreviousPage()}
          className='w-8 h-8 border-transparent hover:bg-transparent'
        >
          <ChevronLeft className='w-5 h-5 text-default-900' />
        </Button>
        {table.getPageOptions().map((page, pageIndex) => (
          <Button
            key={`basic-data-table-${pageIndex}`}
            onClick={() => table.setPageIndex(pageIndex)}
            size='icon'
            className={`w-7 h-7 hover:text-primary-foreground ${
              table.getState().pagination.pageIndex === pageIndex ? 'bg-default' : 'bg-default-100 text-default'
            }`}
          >
            {page + 1}
          </Button>
        ))}
        <Button
          variant='outline'
          size='icon'
          onClick={() => table.nextPage()}
          disabled={!table.getCanNextPage()}
          className='w-8 h-8 border-transparent hover:bg-transparent'
        >
          <ChevronRight className='w-5 h-5 text-default-900' />
        </Button>
      </div>
    </div>
  );
};

export default RecentOrderTable;

================
File: dashboard/components/visitors-chart.tsx
================
'use client';
import dynamic from 'next/dynamic';
const Chart = dynamic(() => import('react-apexcharts'), { ssr: false });
import { colors } from '@/lib/colors';
import { useTheme } from 'next-themes';
import { getLabel, getYAxisConfig } from '@/lib/appex-chart-options';
import { ApexOptions } from 'apexcharts';

const VisitorsChart = ({ height = 350 }) => {
  const { theme: mode } = useTheme();

  const series = [
    {
      name: 'Male',
      data: [41, 64, 81, 60, 42, 42, 33, 23],
    },
    {
      name: 'Female',
      data: [65, 46, 42, 25, 58, 63, 76, 43],
    },
  ];

  const options: unknown = {
    chart: {
      toolbar: {
        show: false,
      },
      dropShadow: {
        enabled: false,
        blur: 8,
        left: 1,
        top: 1,
        opacity: 0.5,
      },
    },
    dataLabels: {
      enabled: false,
    },
    tooltip: {
      theme: mode === 'dark' ? 'dark' : 'light',
    },
    colors: [colors.warning, colors.primary],
    fill: {
      opacity: [0.4, 0.4],
    },
    yaxis: getYAxisConfig(mode === 'light' ? colors['default-600'] : colors['default-300']),
    xaxis: {
      categories: ['2019', '2020', '2021', '2017', '2018', '2015', '2014', '2013'],
      labels: getLabel(mode === 'light' ? colors['default-600'] : colors['default-300']),
      axisBorder: {
        show: false,
      },
      axisTicks: {
        show: false,
      },
    },
    legend: {
      show: true,
      fontSize: '14px',
      fontFamily: 'Inter',
      labels: {
        colors: mode === 'light' ? colors['default-600'] : colors['default-300'],
      },
    },
    plotOptions: {
      radar: {
        size: undefined,
        offsetX: 0,
        offsetY: 0,
        polygons: {
          strokeColors: 'transparent',
          strokeWidth: 0.5,
          connectorColors: 'transparent',
        },
      },
    },
    stroke: {
      width: 2,
    },
    markers: {
      size: 0,
    },
    padding: {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0,
    },
  };
  return <Chart options={options as ApexOptions} series={series} type='radar' height={height} width={'100%'} />;
};

export default VisitorsChart;

================
File: dashboard/components/visitors-report.tsx
================
'use client';
import dynamic from 'next/dynamic';
const Chart = dynamic(() => import('react-apexcharts'), { ssr: false });
import { useTheme } from 'next-themes';
import { getGridConfig, getXAxisConfig, getYAxisConfig } from '@/lib/appex-chart-options';
import { colors } from '@/lib/colors';
import { ApexOptions } from 'apexcharts';

interface VisitorsReportChartProps {
  height?: number;
  seriesData?: number[];
}
const VisitorsReportChart = ({
  height = 300,
  seriesData = [90, 70, 85, 60, 80, 70, 90, 75, 60, 80],
}: VisitorsReportChartProps) => {
  const { theme: mode } = useTheme();
  const series = [
    {
      data: seriesData,
    },
  ];
  const options: unknown = {
    chart: {
      toolbar: {
        show: false,
      },
    },
    dataLabels: {
      enabled: false,
    },
    stroke: {
      curve: 'smooth',
      width: 4,
    },
    colors: [colors.primary],
    tooltip: {
      theme: mode === 'dark' ? 'dark' : 'light',
    },
    grid: getGridConfig(),
    fill: {
      type: 'gradient',
      colors: [colors.primary],
      gradient: {
        shadeIntensity: 1,
        opacityFrom: 0.4,
        opacityTo: 0.5,
        stops: [50, 100, 0],
      },
    },
    yaxis: getYAxisConfig(mode === 'light' ? colors['default-600'] : colors['default-300']),
    xaxis: getXAxisConfig(mode === 'light' ? colors['default-600'] : colors['default-300']),
    padding: {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0,
    },
  };
  return <Chart options={options as ApexOptions} series={series} type='area' height={height} width={'100%'} />;
};

export default VisitorsReportChart;

================
File: dashboard/strategies/strategy-builder/page.tsx
================
import React from 'react';
import StrategyBuilder from '@/components/strategies/StrategyBuilder';

const page = () => {
  return (
    <div className='-m-5 min-h-screen bg-gray-100 dark:bg-gray-900'>
      <StrategyBuilder />
    </div>
  );
};

export default page;

================
File: dashboard/layout.tsx
================
import LayoutProvider from "@/providers/layout.provider";
import LayoutContentProvider from "@/providers/content.provider";
import Sidebar from '@/components/partials/sidebar'
import Footer from '@/components/partials/footer'
import Header from '@/components/partials/header'
const layout = async ({ children }: { children: React.ReactNode }) => {

    return (
        <LayoutProvider >
            <Header />
            <Sidebar />
            <LayoutContentProvider>
                {children}
            </LayoutContentProvider>
            <Footer />
        </LayoutProvider>
    )


};

export default layout;

================
File: dashboard/page.tsx
================
import { StatusBlock } from '@/components/blocks/status-block';
import { WelcomeBlock } from '@/components/blocks/welcome-block';
import { Box, ShoppingCart, TrendingUp } from 'lucide-react';
import Image from 'next/image';
import RevinueBarChart from '@/components/revenue-bar-chart';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import DashboardDropdown from '@/components/dashboard-dropdown';
import OrdersBlock from '@/components/blocks/orders-block';
import EarningBlock from '@/components/blocks/earning-block';
import RecentOrderTable from './components/recent-order-table';
import { useAuth } from '@/hooks/useAuth';

const Dashboard = () => {
  const { session, isLoading } = useAuth();

  if (isLoading) return <div>Loading...</div>;
  return (
    <div className='space-y-5'>
      <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-5'>
        <WelcomeBlock>
          <div className='max-w-[180px] relative z-10'>
            <h4 className='text-xl font-medium text-primary-foreground dark:text-default-900 mb-2'>
              <span className='block font-normal'> Welcome</span>
              <span className='block'>{session?.user?.name}</span>
            </h4>
          </div>
          <Image
            src='/images/all-img/widget-bg-2.png'
            width={400}
            height={150}
            priority
            alt='Description of the image'
            className='absolute top-0 start-0 w-full h-full object-cover rounded-md'
          />
        </WelcomeBlock>
        <StatusBlock
          title='Revenue'
          total='3,564'
          iconWrapperClass='bg-info/10'
          chartColor='#00EBFF'
          icon={<ShoppingCart className='w-5 h-5  text-info' />}
        />
        <StatusBlock
          title='Sold'
          total='564'
          icon={<Box className='w-5 h-5 text-warning' />}
          iconWrapperClass='bg-warning/10'
          chartColor='#FB8F65'
        />
        <StatusBlock
          title='Growth'
          total='+5.0%'
          icon={<TrendingUp className='w-5 h-5 text-primary' />}
          iconWrapperClass='bg-primary/10'
          chartColor='#2563eb'
        />
      </div>
      <div className='grid grid-cols-12 gap-5'>
        <div className='col-span-12 lg:col-span-4'>
          <Card className='h-full'>
            <CardHeader className='flex flex-row items-center gap-1'>
              <CardTitle className='flex-1'>Statistics</CardTitle>
              <DashboardDropdown />
            </CardHeader>
            <CardContent>
              <div className='grid grid-cols-2  gap-5'>
                <div className='col-span-2 md:col-span-1'>
                  <OrdersBlock
                    title='Orders'
                    total='123k'
                    chartColor='#f1595c'
                    className='border-none shadow-none bg-default-50 '
                  />
                </div>
                <div className='col-span-2 md:col-span-1'>
                  <OrdersBlock
                    title='Profit'
                    total='123k'
                    chartColor='#4669fa'
                    chartType='line'
                    percentageContent={<span className='text-primary'>+2.5%</span>}
                    className='border-none shadow-none bg-default-50 col-span-2 md:col-span-1'
                  />
                </div>
                <div className='col-span-2'>
                  <EarningBlock
                    title='Earnings'
                    total='$12,335.00'
                    percentage='+08%'
                    className='col-span-2 border-none shadow-none bg-default-50'
                  />
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
        <div className='col-span-12 lg:col-span-8'>
          <Card className='h-full'>
            <CardContent className='pt-5 h-full'>
              <RevinueBarChart height={420} />
            </CardContent>
          </Card>
        </div>
      </div>
      <div className='grid lg:grid-cols-1 grid-cols-1 gap-5'>
        <Card>
          <CardHeader className='flex flex-row items-center gap-1'>
            <CardTitle className='flex-1'>Recent Order</CardTitle>
            <DashboardDropdown />
          </CardHeader>
          <CardContent className='px-0'>
            <RecentOrderTable />
          </CardContent>
        </Card>
      </div>
      <div className='grid grid-cols-12  gap-5'></div>
    </div>
  );
};

export default Dashboard;

================
File: error.tsx
================
'use client'; // Error components must be Client Components

import { Button } from '@/components/ui/button';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { Info } from 'lucide-react';

export default function Error({ reset }: { reset: () => void }) {
  return (
    <div className='space-y-4'>
      <Alert color='destructive' variant='soft'>
        <Info className='h-5 w-5' />
        <AlertDescription>Something went wrong!</AlertDescription>
      </Alert>
      <Button onClick={() => reset()} color='destructive' size='sm'>
        Try again
      </Button>
    </div>
  );
}

================
File: globals.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;

    --secondary: 210 40% 96.1%;
    --secondary-foreground: 215.3 19.3% 34.5%;

    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --success: 154 52% 55%;
    --success-foreground: 138.5 76.5% 96.7%;

    --warning: 16 93% 70%;
    --warning-foreground: 33.3 100% 96.5%;



    --success: 154 52% 55%;
    --success-foreground: 138.5 76.5% 96.7%;

    --warning: 16 93% 70%;
    --warning-foreground: 33.3 100% 96.5%;

    --info: 185 96% 51%;
    --info-foreground: 183.2 100% 96.3%;

    --ring: 222.2 84% 4.9%;

    --radius: 0.5rem;

    --default-50: 210 40% 98%;
    --default-100: 210 40% 96.1%;
    --default-200: 214.3 31.8% 91.4%;
    --default-300: 212.7 26.8% 83.9%;
    --default-400: 215 20.2% 65.1%;
    --default-500: 215.4 16.3% 46.9%;
    --default-600: 215.3 19.3% 34.5%;
    --default-700: 215.3 25% 26.7%;
    --default-800: 217.2 32.6% 17.5%;
    --default-900: 222.2 47.4% 11.2%;
    --default-950: 222.2 84% 4.9%;
    --default: 222.2 47.4% 11.2%;
    --default-foreground: 210 40% 98%;

    --primary-50: 213.8 100% 96.9%;
    --primary-100: 214.3 94.6% 92.7%;
    --primary-200: 213.3 96.9% 87.3%;
    --primary-300: 211.7 96.4% 78.4%;
    --primary-400: 213.1 93.9% 67.8%;
    --primary-500: 217.2 91.2% 59.8%;
    --primary-600: 221.2 83.2% 53.3%;
    --primary-700: 224.3 76.3% 48%;
    --primary-800: 225.9 70.7% 40.2%;
    --primary-900: 224.4 64.3% 32.9%;
    --primary-950: 226.2 57% 21%;
    --primary: 221.2 83.2% 53.3%;
    --primary-foreground: 210 40% 98%;

    --sidebar: 0 0% 100%;
    --header: 0 0% 100%;
    --menu-arrow: 228, 45%, 98%;
    --menu-arrow-active: 212.7 26.8% 83.9%;
    --menu-foreground: 215, 20%, 65%;
  }

  .dark {

    --background: 222.2 47.4% 11.2%;
    --foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    

    --card: 215 27.9% 16.9%;
    --card-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;

    --primary: 217.2 91.2% 59.8%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 215.3 25% 26.7%;
    --secondary-foreground: 210 40% 98%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --success: 154 52% 55%;
    --success-foreground: 138.5 76.5% 96.7%;

    --warning: 16 93% 70%;
    --warning-foreground: 33.3 100% 96.5%;

    --info: 185 96% 51%;
    --info-foreground: 183.2 100% 96.3%;

    --ring: 212.7 26.8% 83.9%;

    --default-950: 210 40% 98%;
    --default-900: 210 40% 96.1%;
    --default-800: 214.3 31.8% 91.4%;
    --default-700: 212.7 26.8% 83.9%;
    --default-600: 215 20.2% 65.1%;
    --default-500: 215.4 16.3% 46.9%;
    --default-400: 215.3 19.3% 34.5%;
    --default-300: 215.3 25% 26.7%;
    --default-200: 217.2 32.6% 17.5%;
    --default-100: 222.2 47.4% 11.2%;
    --default-50: 222.2 84% 4.9%;
    --default: 213.8 100% 96.9%;
    --default-foreground: 222.2 47.4% 11.2%;

    --sidebar: 215 27.9% 16.9%;
    --header: 215 27.9% 16.9%;
    --menu-arrow: 215.3 25% 26.7%;
    --menu-arrow-active: 215.3 19.3% 34.5%;
    --menu-foreground: 214.3 31.8% 91.4%;
  }
}

/* vector map */
.dashcode-app-vmap path {
  @apply fill-[#6794DC];
}

.dashcode-app-vmap .svg-map__location[aria-checked="true"] {
  @apply fill-primary;
}

.dashcode-app-codeVmapInfo path {
  @apply fill-info;
}

.dashcode-app-codeVmapInfo path .svg-map__location[aria-checked="true"] {
  @apply fill-info;
}
.dashcode-app-codeVmapWarning path {
  @apply fill-warning;
}
.dashcode-app-codeVmapWarning path  .svg-map__location[aria-checked="true"] {
    @apply fill-warning;
}
.dashcode-app-codeVmapSuccess path {
  @apply fill-success;

}
.dashcode-app-codeVmapSuccess path .svg-map__location[aria-checked="true"]  {
    @apply fill-success;
}



@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply text-foreground;
  }

  .input-group :not(:first-child) input {
    border-top-left-radius: 0 !important;
    border-bottom-left-radius: 0 !important;
  }

  .input-group.merged :not(:first-child) input {
    border-left-width: 0 !important;
    padding-left: 0px !important;
  }

  .input-group :not(:last-child) input {
    border-top-right-radius: 0 !important;
    border-bottom-right-radius: 0 !important;
  }

  .input-group.merged :not(:last-child) input {
    border-right: 0px !important;
    padding-right: 0px !important;
  }


  .no-scrollbar::-webkit-scrollbar {
    width: 0px;
  }

  .no-scrollbar::-webkit-scrollbar-thumb {
    background-color: transparent;
  }

}

.logo-box-3 {
  @apply flex justify-center items-center min-h-screen;
}

.v3-right-column {
  @apply flex flex-col items-center justify-center;
}


.has-sticky-header::after {
  position: absolute;
  z-index: -10;
  --tw-backdrop-blur: blur(12px);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  --tw-content: "";
  content: var(--tw-content);
  background: linear-gradient(180deg, rgba(var(--v-theme-background)) 44%, rgba(var(--v-theme-background)) 73%, rgba(var(--v-theme-background)));
  background-repeat: repeat;
  block-size: 5.5rem;
  inset-block-start: -2.5rem;
  inset-inline-end: 0;
  inset-inline-start: 0;
  -webkit-mask: linear-gradient(black, black 18%, transparent 100%);
  mask: linear-gradient(black, black 18%, transparent 100%);
}
.has-sticky-footer::after {
  position: absolute;
  z-index: -10;
  --tw-backdrop-blur: blur(12px);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  --tw-content: "";
  content: var(--tw-content);
  background: linear-gradient(180deg, rgba(var(--v-theme-background)) 44%, rgba(var(--v-theme-background)) 73%, rgba(var(--v-theme-background)));
  background-repeat: repeat;
  block-size: 5.5rem;
  inset-block-start: 1.5rem;
  inset-inline-end: 0;
  inset-inline-start: 0;
  -webkit-mask: linear-gradient(black, black 18%, transparent 100%);
  mask: linear-gradient(black, black 18%, transparent 100%);
}

.app-height {
  height: calc(var(--vh, 1vh) * 100 - 10.1rem);
}

/* calendar */
.dashcode-app-calendar .fc-toolbar-chunk button {
  @apply h-12 px-5;
}

.dashcode-app-calendar .fc-toolbar-chunk button.fc-prev-button {
  @apply text-default-600;
}

.dashcode-app-calendar .fc-toolbar-chunk button.fc-next-button {
  @apply text-default-600;
}

.dashcode-app-calendar .fc-button {
  @apply h-12 px-5;
}

.dashcode-app-calendar .fc .fc-button-primary {
  @apply bg-transparent hover:bg-primary border border-default-200 dark:border-default-300 dark:hover:bg-default-50 dark:hover:text-foreground text-default-700 capitalize;
}

.dashcode-app-calendar .fc .fc-button-primary.fc-button-active {
  @apply border-none;
}

.dashcode-app-calendar .fc .fc-button-primary:not(:disabled):active,
.dashcode-app-calendar .fc .fc-button-primary:not(:disabled).fc-button-active,
.dashcode-app-calendar .fc .fc-button-primary:hover {
  @apply bg-default text-default-foreground dark:bg-default-50 dark:text-foreground;
}

.dashcode-app-calendar .fc .fc-button-primary:disabled {
  @apply bg-transparent border border-default-200 cursor-not-allowed hover:text-default-800;
}

.dashcode-app-calendar .fc-today-button {
  @apply hover:text-primary-foreground;
}

.dashcode-app-calendar .fc .fc-button-primary:focus {
  box-shadow: none !important;
}

.dashcode-app-calendar .fc-theme-standard .fc-scrollgrid {
  @apply border-default-100 dark:border-default-300;
}

.dashcode-app-calendar .fc-theme-standard td,
.dashcode-app-calendar .fc-theme-standard th {
  @apply border-default-100 dark:border-default-300;
}

.dashcode-app-calendar .fc-col-header-cell .fc-scrollgrid-sync-inner {
  @apply bg-default-50 dark:bg-default-300 text-xs text-default-600 font-normal py-3;
}

.dashcode-app-calendar .fc-col-header-cell {
  @apply border-none;
}

.dashcode-app-calendar .fc-daygrid-day-top {
  @apply text-sm px-3 py-2 text-default-900 font-normal;
}

.dashcode-app-calendar .fc-h-event .fc-event-main-frame {
  @apply flex justify-center items-center text-center w-max mx-auto;
}

.dashcode-app-calendar .fc-event-time {
  @apply text-sm font-normal flex-none text-primary-foreground;
}

.dashcode-app-calendar .fc-timegrid-event .fc-event-main {
  @apply p-0 flex justify-center items-center gap-1;
}

.dashcode-app-calendar .fc-event-title {
  @apply text-sm font-light;
}

.dashcode-app-calendar .fc-timegrid-col-events .fc-event-title {
  @apply pt-4;
}

.dashcode-app-calendar .fc .fc-toolbar-title {
  @apply text-lg font-normal text-default-600;
}

.dashcode-app .fc .fc-daygrid-body-unbalanced .fc-daygrid-day-events {
  @apply p-1;
}

.dashcode-app-calendar .fc-theme-standard .fc-list {
  @apply border border-default-200;
}

.dashcode-app-calendar .fc-daygrid-event-dot {
  @apply hidden;
}

.dashcode-app-calendar .fc .fc-list-sticky .fc-list-day>* {
  @apply bg-default-50;
}

.dashcode-app-calendar .fc-timegrid-col-events .fc-event-title {
  @apply pt-0;
}

.dashcode-app-calendar .fc-timegrid-event-harness>.fc-timegrid-event {
  @apply static;
}

@media (max-width: 981px) {

  .dashcode-app-calendar .fc-button-group,
  .dashcode-app-calendar .fc .fc-toolbar {
    display: block !important;
  }

  .dashcode-app-calendar .fc .fc-toolbar {
    @apply space-y-4;
  }

  .dashcode-app-calendar .fc-toolbar-chunk {
    @apply space-y-4;
  }

  .dashcode-app-calendar .fc .fc-button {
    padding: 0.4em 0.65em !important;
  }
}

.dashcode-app-calendar .fc .fc-timegrid-axis-cushion,
.dashcode-app-calendar .fc .fc-timegrid-slot-label-cushion {
  @apply dark:text-default-300;
}

.dashcode-app-calendar .fc .fc-list-event:hover td {
  @apply bg-inherit;
}

.dashcode-app-calendar .fc .fc-list-event-dot {
  @apply hidden;
}

.dashcode-app-calendar .fc-direction-ltr .fc-list-day-text,
.dashcode-app-calendar .fc-direction-rtl .fc-list-day-side-text,
.dashcode-app-calendar .fc-direction-ltr .fc-list-day-side-text,
.dashcode-app-calendar .fc-direction-rtl .fc-list-day-text {
  @apply text-base font-medium text-default-600;
}

.dashcode-app-calendar .primary {
  @apply bg-primary border-none text-primary-foreground text-center px-2 font-medium text-sm;
}

.dashcode-app-calendar .secondary {
  @apply bg-secondary border-none text-primary-foreground text-center px-2 font-medium text-sm;
}

.dashcode-app-calendar .danger {
  @apply bg-destructive border-none text-primary-foreground text-center px-2 font-medium text-sm;
}

.dashcode-app-calendar .destructive {
  @apply bg-destructive border-none text-primary-foreground text-center px-2 font-medium text-sm;
}

.dashcode-app-calendar .info {
  @apply bg-info border-none text-primary-foreground text-center px-2 font-medium text-sm;
}

.dashcode-app-calendar .warning {
  @apply bg-warning border-none text-primary-foreground text-center px-2 font-medium text-sm;
}

.dashcode-app-calendar .success {
  @apply bg-success border-none text-primary-foreground text-center px-2 font-medium text-sm;
}

.dashcode-app-calendar .dark  {
  @apply bg-card-foreground border-none text-primary-foreground px-2 font-medium text-sm;
}


/* react select */

 .dashcode-app .react-select .react-select.is-invalid .select__control {
  border-color: none !important;
}

.dashcode-app .react-select .select__control {
  @apply bg-background min-h-8 border border-default-200 focus:border-default;
}

.dashcode-app .react-select .select__single-value {
  @apply text-sm font-medium text-default-800;
}

.dashcode-app .react-select .select__menu {
  @apply bg-background;
}

.dashcode-app .react-select .select__placeholder {
  @apply text-default-500;
}

.dashcode-app .react-select .select__menu .select__option {
  @apply  hover:bg-default/10;
}

.dashcode-app .react-select .select__menu .select__option.select__option--is-selected {
  @apply bg-default dark:bg-default-200;
}

.dashcode-app .react-select.is-invalid .select__control {
  border-color: none !important;
}

.dashcode-app .react-select .has-error .select__control {
  @apply border-destructive;
}

.dashcode-app .react-select .react-select__control .select__input {
  @apply text-default-500;
}

.dashcode-app .react-select .react-select__control.select__control--is-disabled {
  @apply cursor-not-allowed;
}

.dashcode-app .react-select .react-select__control .select__indicator-separator {
  @apply bg-default-50 text-default-800 placeholder:text-opacity-60;
}

.dashcode-app .react-select .react-select__control .select__indicator svg {
  @apply cursor-pointer text-default-600;
}

.dashcode-app .react-select .has-error .react-select__control .select__indicator svg {
  @apply text-destructive;
}

.dashcode-app .react-select .select__multi-value__label {
  @apply text-xs bg-default  text-default-foreground rounded-none ltr:rounded-l rtl:rounded-r;
}

.dashcode-app .react-select .select__multi-value__remove {
  @apply bg-default rounded-none ltr:rounded-r rtl:rounded-l;
}

.dashcode-app .react-select .select__multi-value__remove svg {
  @apply fill-default-foreground;
}

html[dir=rtl] .react-select .select__loading-indicator {
  flex-direction: row-reverse;
} 

/* quil editor */
.ql-container {
  min-height: 9rem;
  height: 100%;
  flex: 1;
  display: flex;
  flex-direction: column;
}

.ql-editor {
  height: 100%;
  flex: 1;
  overflow-y: auto;
  width: 100%;
}

================
File: layout.tsx
================
import type { Metadata } from 'next';
import { Inter } from 'next/font/google';
import './globals.css';
import './theme.css';
import { ThemeProvider } from '@/providers/theme-provider';
import MountedProvider from '@/providers/mounted.provider';
import { Toaster } from '@/components/ui/toaster';
import { Toaster as SonnerToaster } from '@/components/ui/sonner';
import AuthProvider from '@/providers/auth.provider';

const inter = Inter({ subsets: ['latin'] });

export const metadata: Metadata = {
  title: 'Atomatic - Autonamous Algo Trading',
  description: 'A no-code trading platform for everyone',
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang='en' suppressHydrationWarning>
      <body suppressHydrationWarning className={`${inter.className} dashcode-app`}>
        <AuthProvider>
          <ThemeProvider attribute='class' defaultTheme='light'>
            <MountedProvider>{children}</MountedProvider>
            <Toaster />
            <SonnerToaster />
          </ThemeProvider>
        </AuthProvider>
      </body>
    </html>
  );
}

================
File: not-found.tsx
================
'use client';

import Link from 'next/link';
import Image from 'next/image';

export default function NotFound() {
  return (
    <div className='min-h-screen flex flex-col justify-center items-center text-center py-20 bg-background'>
      <Image src='/assets/images/all-img/404-2.svg' alt='' height={300} width={300} />
      <div className='max-w-[546px] mx-auto w-full mt-12'>
        <h4 className='text-default-900 mb-4'>Page not found</h4>
        <div className='dark:text-white text-base font-normal mb-10'>
          The page you are looking for might have been removed had its name changed or is temporarily unavailable.
        </div>
      </div>
      <div className='max-w-[300px] mx-auto w-full'>
        <Link href='/dashboard' className='btn bg-white hover:bg-opacity-75 transition-all duration-150 block text-center'>
          Go to homepage
        </Link>
      </div>
    </div>
  );
}

================
File: page.tsx
================
import Image from "next/image";

export default function Home() {
  return (
    <div className="grid grid-rows-[20px_1fr_20px] items-center justify-items-center min-h-screen p-8 pb-20 gap-16 sm:p-20 font-[family-name:var(--font-geist-sans)]">
      <main className="flex flex-col gap-8 row-start-2 items-center sm:items-start">
        <Image
          className="dark:invert"
          src="/next.svg"
          alt="Next.js logo"
          width={180}
          height={38}
          priority
        />
        <ol className="list-inside list-decimal text-sm text-center sm:text-left font-[family-name:var(--font-geist-mono)]">
          <li className="mb-2">
            Get started by editing{" "}
            <code className="bg-black/[.05] dark:bg-white/[.06] px-1 py-0.5 rounded font-semibold">
              app/page.tsx
            </code>
            .
          </li>
          <li>Save and see your changes instantly.</li>
        </ol>

        <div className="flex gap-4 items-center flex-col sm:flex-row">
          <a
            className="rounded-full border border-solid border-transparent transition-colors flex items-center justify-center bg-foreground text-background gap-2 hover:bg-[#383838] dark:hover:bg-[#ccc] text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5"
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=appdir-template-tw&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            <Image
              className="dark:invert"
              src="/vercel.svg"
              alt="Vercel logomark"
              width={20}
              height={20}
            />
            Deploy now
          </a>
          <a
            className="rounded-full border border-solid border-black/[.08] dark:border-white/[.145] transition-colors flex items-center justify-center hover:bg-[#f2f2f2] dark:hover:bg-[#1a1a1a] hover:border-transparent text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 sm:min-w-44"
            href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=appdir-template-tw&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            Read our docs
          </a>
        </div>
      </main>
      <footer className="row-start-3 flex gap-6 flex-wrap items-center justify-center">
        <a
          className="flex items-center gap-2 hover:underline hover:underline-offset-4"
          href="https://nextjs.org/learn?utm_source=create-next-app&utm_medium=appdir-template-tw&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          <Image
            aria-hidden
            src="/file.svg"
            alt="File icon"
            width={16}
            height={16}
          />
          Learn
        </a>
        <a
          className="flex items-center gap-2 hover:underline hover:underline-offset-4"
          href="https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=appdir-template-tw&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          <Image
            aria-hidden
            src="/window.svg"
            alt="Window icon"
            width={16}
            height={16}
          />
          Examples
        </a>
        <a
          className="flex items-center gap-2 hover:underline hover:underline-offset-4"
          href="https://nextjs.org?utm_source=create-next-app&utm_medium=appdir-template-tw&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          <Image
            aria-hidden
            src="/globe.svg"
            alt="Globe icon"
            width={16}
            height={16}
          />
          Go to nextjs.org â†’
        </a>
      </footer>
    </div>
  );
}

================
File: theme.css
================
.theme-dark {
    --sidebar: 222.2 84% 4.9%;
    --header: 222.2 84% 4.9%;
}
.theme-rose {
    --sidebar: 341, 64%, 43%; 
    --header: 341, 64%, 43%;
    --secondary: 339, 60%, 51%;
     --menu-arrow: 339, 60%, 51%;
   --menu-arrow-active: 336, 67%, 60%;
    
}

.theme-gray {
    --sidebar:  210, 10%, 23%;
    --header:  210, 10%, 23%;

     --secondary: 207, 14%, 31%;
     --menu-arrow: 207, 14%, 31%;
   --menu-arrow-active: 203, 16%, 43%;
}
.theme-steel-blue {
    --sidebar: 226, 36%, 39%; 
    --header: 226, 36%, 39%;
      --secondary: 224, 40%, 48%;
     --menu-arrow: 224, 40%, 48%;
   --menu-arrow-active: 216, 47%, 60%;
}
.theme-purple {
    --sidebar: 299, 56%, 19%;
    --header: 299, 56%, 19%;
     --secondary: 299, 40%, 28%;
     --menu-arrow: 299, 40%, 28%;
   --menu-arrow-active: 298, 44%, 33%;
}

.theme-redwood {
    --sidebar: 345, 24%, 29%; 
    --header: 345, 24%, 29%;
     --secondary: 346, 26%, 35%;
     --menu-arrow: 346, 26%, 35%;
   --menu-arrow-active: 344, 27%, 42%;
}
.theme-green {
    --sidebar: 164, 64%, 21%;
    --header: 164, 64%, 21%;

     --secondary: 164, 68%, 24%;
     --menu-arrow: 164, 68%, 24%;
   --menu-arrow-active: 163, 69%, 30%;
}
.theme-ocean-blue {
    --sidebar: 206, 92%, 35%; 
    --header: 206, 92%, 35%;

      --secondary: 205, 94%, 39%;
     --menu-arrow: 205, 94%, 39%;
   --menu-arrow-active: 203, 85%, 48%;
}
.theme-transparent{
    --header: transparent;
    box-shadow: none;
}
